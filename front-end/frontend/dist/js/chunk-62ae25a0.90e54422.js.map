{"version":3,"sources":["webpack:///../../../src/components/VThemeProvider/VThemeProvider.ts","webpack:///../../../src/mixins/activatable/index.ts","webpack:///../../../src/mixins/dependent/index.ts","webpack:///../../../src/mixins/detachable/index.ts","webpack:///../../../src/components/VOverlay/VOverlay.ts","webpack:///../../../src/components/VOverlay/index.ts","webpack:///../../../src/mixins/overlayable/index.ts","webpack:///../../../src/mixins/returnable/index.ts","webpack:///../../../src/mixins/stackable/index.ts","webpack:///../../../src/directives/click-outside/index.ts","webpack:///../../../src/components/VDialog/VDialog.ts","webpack:///../../../src/mixins/delayable/index.ts"],"names":["name","props","root","Boolean","computed","isDark","this","render","$slots","default","node","baseMixins","mixins","activator","validator","val","includes","disabled","internalActivator","openOnHover","openOnFocus","data","activatorElement","activatorNode","events","listeners","watch","mounted","slotType","beforeDestroy","methods","addActivatorEvents","keys","Object","key","genActivator","on","attrs","genActivatorAttributes","role","String","genActivatorListeners","e","getActivator","target","length","vm","m","getContentSlot","getValueProxy","self","removeActivatorEvents","resetActivator","searchChildren","results","index","children","child","closeDependents","isActive","isDependent","openDependents","getOpenDependents","getOpenDependentElements","result","getClickableDependentElements","$refs","overlay","validateAttachTarget","type","Node","attach","contentClass","hasDetached","hasContent","beforeMount","Array","deactivated","content","console","getScopeIdAttrs","scopeId","initDetach","_isDestroyed","document","absolute","color","dark","opacity","Number","value","zIndex","__scrim","setBackgroundColor","staticClass","style","computedOpacity","$createElement","classes","themeClasses","styles","genContent","h","class","hideOverlay","overlayColor","overlayOpacity","animationFrame","genOverlay","createOverlay","propsData","parent","$el","requestAnimationFrame","removeOverlay","showScroll","cancelAnimationFrame","scrollListener","up","down","checkPath","hasScrollbar","el","window","shouldScroll","delta","isInside","path","composedPath","dialog","selected","hideScroll","$vuetify","breakpoint","passive","returnValue","originalValue","save","setTimeout","stackElement","stackExclude","stackMinZIndex","activeZIndex","getMaxZIndex","parseInt","exclude","base","zis","activeElements","Math","defaultConditional","directive","handler","binding","elements","ClickOutside","inserted","onClick","app","unbind","directives","fullscreen","light","maxWidth","noClickAnimation","origin","persistent","retainFocus","scrollable","transition","width","activatedBy","animate","animateTimeout","contentClasses","hasActivator","$scopedSlots","created","$attrs","hasOwnProperty","animateClick","closeConditional","contains","show","bind","onClickOutside","onKeydown","onFocusin","some","focusable","querySelectorAll","showLazyContent","tabindex","keydown","ref","genTransition","appear","genInnerContent","include","transformOrigin","undefined","openDelay","closeDelay","openTimeout","closeTimeout","clearDelay","clearTimeout","runDelay","delay","cb","open","close"],"mappings":"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","file":"js/chunk-62ae25a0.90e54422.js","sourcesContent":["// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default Themeable.extend({\n  name: 'v-theme-provider',\n\n  props: { root: Boolean },\n\n  computed: {\n    isDark (): boolean {\n      return this.root\n        ? this.rootIsDark\n        : Themeable.options.computed.isDark.call(this)\n    },\n  },\n\n  render (): VNode {\n    /* istanbul ignore next */\n    return (\n      this.$slots.default! &&\n      this.$slots.default!.find(node => !node.isComment && node.text !== ' ')!\n    )\n  },\n})\n","// Mixins\nimport Delayable from '../delayable'\nimport Toggleable from '../toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { getSlot, getSlotType } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\ntype Listeners = Dictionary<(e: MouseEvent & KeyboardEvent & FocusEvent) => void>\n\nconst baseMixins = mixins(\n  Delayable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'activatable',\n\n  props: {\n    activator: {\n      default: null as unknown as PropType<string | HTMLElement | VNode | Element | null>,\n      validator: (val: string | object) => {\n        return ['string', 'object'].includes(typeof val)\n      },\n    },\n    disabled: Boolean,\n    internalActivator: Boolean,\n    openOnHover: Boolean,\n    openOnFocus: Boolean,\n  },\n\n  data: () => ({\n    // Do not use this directly, call getActivator() instead\n    activatorElement: null as HTMLElement | null,\n    activatorNode: [] as VNode[],\n    events: ['click', 'mouseenter', 'mouseleave', 'focus'],\n    listeners: {} as Listeners,\n  }),\n\n  watch: {\n    activator: 'resetActivator',\n    openOnFocus: 'resetActivator',\n    openOnHover: 'resetActivator',\n  },\n\n  mounted () {\n    const slotType = getSlotType(this, 'activator', true)\n\n    if (slotType && ['v-slot', 'normal'].includes(slotType)) {\n      consoleError(`The activator slot must be bound, try '<template v-slot:activator=\"{ on }\"><v-btn v-on=\"on\">'`, this)\n    }\n\n    this.addActivatorEvents()\n  },\n\n  beforeDestroy () {\n    this.removeActivatorEvents()\n  },\n\n  methods: {\n    addActivatorEvents () {\n      if (\n        !this.activator ||\n        this.disabled ||\n        !this.getActivator()\n      ) return\n\n      this.listeners = this.genActivatorListeners()\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        this.getActivator()!.addEventListener(key, this.listeners[key] as any)\n      }\n    },\n    genActivator () {\n      const node = getSlot(this, 'activator', Object.assign(this.getValueProxy(), {\n        on: this.genActivatorListeners(),\n        attrs: this.genActivatorAttributes(),\n      })) || []\n\n      this.activatorNode = node\n\n      return node\n    },\n    genActivatorAttributes () {\n      return {\n        role: 'button',\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive),\n      }\n    },\n    genActivatorListeners () {\n      if (this.disabled) return {}\n\n      const listeners: Listeners = {}\n\n      if (this.openOnHover) {\n        listeners.mouseenter = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('open')\n        }\n        listeners.mouseleave = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      } else {\n        listeners.click = (e: MouseEvent) => {\n          const activator = this.getActivator(e)\n          if (activator) activator.focus()\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      if (this.openOnFocus) {\n        listeners.focus = (e: FocusEvent) => {\n          this.getActivator(e)\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      return listeners\n    },\n    getActivator (e?: Event): HTMLElement | null {\n      // If we've already fetched the activator, re-use\n      if (this.activatorElement) return this.activatorElement\n\n      let activator = null\n\n      if (this.activator) {\n        const target = this.internalActivator ? this.$el : document\n\n        if (typeof this.activator === 'string') {\n          // Selector\n          activator = target.querySelector(this.activator)\n        } else if ((this.activator as any).$el) {\n          // Component (ref)\n          activator = (this.activator as any).$el\n        } else {\n          // HTMLElement | Element\n          activator = this.activator\n        }\n      } else if (this.activatorNode.length === 1 || (this.activatorNode.length && !e)) {\n        // Use the contents of the activator slot\n        // There's either only one element in it or we\n        // don't have a click event to use as a last resort\n        const vm = this.activatorNode[0].componentInstance\n        if (\n          vm &&\n          vm.$options.mixins && //                         Activatable is indirectly used via Menuable\n          vm.$options.mixins.some((m: any) => m.options && ['activatable', 'menuable'].includes(m.options.name))\n        ) {\n          // Activator is actually another activatible component, use its activator (#8846)\n          activator = (vm as any).getActivator()\n        } else {\n          activator = this.activatorNode[0].elm as HTMLElement\n        }\n      } else if (e) {\n        // Activated by a click or focus event\n        activator = (e.currentTarget || e.target) as HTMLElement\n      }\n\n      this.activatorElement = activator\n\n      return this.activatorElement\n    },\n    getContentSlot () {\n      return getSlot(this, 'default', this.getValueProxy(), true)\n    },\n    getValueProxy (): object {\n      const self = this\n      return {\n        get value () {\n          return self.isActive\n        },\n        set value (isActive: boolean) {\n          self.isActive = isActive\n        },\n      }\n    },\n    removeActivatorEvents () {\n      if (\n        !this.activator ||\n        !this.activatorElement\n      ) return\n\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        (this.activatorElement as any).removeEventListener(key, this.listeners[key])\n      }\n\n      this.listeners = {}\n    },\n    resetActivator () {\n      this.removeActivatorEvents()\n      this.activatorElement = null\n      this.getActivator()\n      this.addActivatorEvents()\n    },\n  },\n})\n","import Vue from 'vue'\n\nimport mixins from '../../util/mixins'\nimport { VOverlay } from '../../components/VOverlay'\n\ninterface options extends Vue {\n  $el: HTMLElement\n  $refs: {\n    content: HTMLElement\n  }\n  overlay?: InstanceType<typeof VOverlay>\n}\n\ninterface DependentInstance extends Vue {\n  isActive?: boolean\n  isDependent?: boolean\n}\n\nfunction searchChildren (children: Vue[]): DependentInstance[] {\n  const results = []\n  for (let index = 0; index < children.length; index++) {\n    const child = children[index] as DependentInstance\n    if (child.isActive && child.isDependent) {\n      results.push(child)\n    } else {\n      results.push(...searchChildren(child.$children))\n    }\n  }\n\n  return results\n}\n\n/* @vue/component */\nexport default mixins<options>().extend({\n  name: 'dependent',\n\n  data () {\n    return {\n      closeDependents: true,\n      isActive: false,\n      isDependent: true,\n    }\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) return\n\n      const openDependents = this.getOpenDependents()\n      for (let index = 0; index < openDependents.length; index++) {\n        openDependents[index].isActive = false\n      }\n    },\n  },\n\n  methods: {\n    getOpenDependents (): any[] {\n      if (this.closeDependents) return searchChildren(this.$children)\n\n      return []\n    },\n    getOpenDependentElements (): HTMLElement[] {\n      const result = []\n      const openDependents = this.getOpenDependents()\n\n      for (let index = 0; index < openDependents.length; index++) {\n        result.push(...openDependents[index].getClickableDependentElements())\n      }\n\n      return result\n    },\n    getClickableDependentElements (): HTMLElement[] {\n      const result = [this.$el]\n      if (this.$refs.content) result.push(this.$refs.content)\n      if (this.overlay) result.push(this.overlay.$el as HTMLElement)\n      result.push(...this.getOpenDependentElements())\n\n      return result\n    },\n  },\n})\n","// Mixins\nimport Bootable from '../bootable'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue, { PropOptions } from 'vue'\nimport { VNode } from 'vue/types'\n\ninterface options extends Vue {\n  $el: HTMLElement\n  $refs: {\n    content: HTMLElement\n  }\n}\n\nfunction validateAttachTarget (val: any) {\n  const type = typeof val\n\n  if (type === 'boolean' || type === 'string') return true\n\n  return val.nodeType === Node.ELEMENT_NODE\n}\n\n/* @vue/component */\nexport default mixins<options &\n  /* eslint-disable indent */\n  ExtractVue<typeof Bootable>\n  /* eslint-enable indent */\n>(Bootable).extend({\n  name: 'detachable',\n\n  props: {\n    attach: {\n      default: false,\n      validator: validateAttachTarget,\n    } as PropOptions<boolean | string | Element>,\n    contentClass: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data: () => ({\n    activatorNode: null as null | VNode | VNode[],\n    hasDetached: false,\n  }),\n\n  watch: {\n    attach () {\n      this.hasDetached = false\n      this.initDetach()\n    },\n    hasContent () {\n      this.$nextTick(this.initDetach)\n    },\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n\n        activator.forEach(node => {\n          if (!node.elm) return\n          if (!this.$el.parentNode) return\n\n          const target = this.$el === this.$el.parentNode.firstChild\n            ? this.$el\n            : this.$el.nextSibling\n\n          this.$el.parentNode.insertBefore(node.elm, target)\n        })\n      }\n    })\n  },\n\n  mounted () {\n    this.hasContent && this.initDetach()\n  },\n\n  deactivated () {\n    this.isActive = false\n  },\n\n  beforeDestroy () {\n    // IE11 Fix\n    try {\n      if (\n        this.$refs.content &&\n        this.$refs.content.parentNode\n      ) {\n        this.$refs.content.parentNode.removeChild(this.$refs.content)\n      }\n\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n        activator.forEach(node => {\n          node.elm &&\n            node.elm.parentNode &&\n            node.elm.parentNode.removeChild(node.elm)\n        })\n      }\n    } catch (e) { console.log(e) }\n  },\n\n  methods: {\n    getScopeIdAttrs () {\n      const scopeId = getObjectValueByPath(this.$vnode, 'context.$options._scopeId')\n\n      return scopeId && {\n        [scopeId]: '',\n      }\n    },\n    initDetach () {\n      if (this._isDestroyed ||\n        !this.$refs.content ||\n        this.hasDetached ||\n        // Leave menu in place if attached\n        // and dev has not changed target\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) return\n\n      let target\n      if (this.attach === false) {\n        // Default, detach to app\n        target = document.querySelector('[data-app]')\n      } else if (typeof this.attach === 'string') {\n        // CSS selector\n        target = document.querySelector(this.attach)\n      } else {\n        // DOM Element\n        target = this.attach\n      }\n\n      if (!target) {\n        consoleWarn(`Unable to locate target ${this.attach || '[data-app]'}`, this)\n        return\n      }\n\n      target.appendChild(this.$refs.content)\n\n      this.hasDetached = true\n    },\n  },\n})\n","// Styles\nimport './VOverlay.sass'\n\n// Mixins\nimport Colorable from './../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\nimport Toggleable from './../../mixins/toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Themeable,\n  Toggleable\n).extend({\n  name: 'v-overlay',\n\n  props: {\n    absolute: Boolean,\n    color: {\n      type: String,\n      default: '#212121',\n    },\n    dark: {\n      type: Boolean,\n      default: true,\n    },\n    opacity: {\n      type: [Number, String],\n      default: 0.46,\n    },\n    value: {\n      default: true,\n    },\n    zIndex: {\n      type: [Number, String],\n      default: 5,\n    },\n  },\n\n  computed: {\n    __scrim (): VNode {\n      const data = this.setBackgroundColor(this.color, {\n        staticClass: 'v-overlay__scrim',\n        style: {\n          opacity: this.computedOpacity,\n        },\n      })\n\n      return this.$createElement('div', data)\n    },\n    classes (): object {\n      return {\n        'v-overlay--absolute': this.absolute,\n        'v-overlay--active': this.isActive,\n        ...this.themeClasses,\n      }\n    },\n    computedOpacity (): number {\n      return Number(this.isActive ? this.opacity : 0)\n    },\n    styles (): object {\n      return {\n        zIndex: this.zIndex,\n      }\n    },\n  },\n\n  methods: {\n    genContent () {\n      return this.$createElement('div', {\n        staticClass: 'v-overlay__content',\n      }, this.$slots.default)\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.__scrim]\n\n    if (this.isActive) children.push(this.genContent())\n\n    return h('div', {\n      staticClass: 'v-overlay',\n      class: this.classes,\n      style: this.styles,\n    }, children)\n  },\n})\n","import VOverlay from './VOverlay'\n\nexport { VOverlay }\n\nexport default VOverlay\n","// Components\nimport VOverlay from '../../components/VOverlay'\n\n// Utilities\nimport {\n  keyCodes,\n  addOnceEventListener,\n  addPassiveEventListener,\n  getZIndex,\n} from '../../util/helpers'\n\n// Types\nimport Vue from 'vue'\n\ninterface Toggleable extends Vue {\n  isActive?: boolean\n}\n\ninterface Stackable extends Vue {\n  activeZIndex: number\n}\n\ninterface options {\n  absolute?: boolean\n  $refs: {\n    dialog?: HTMLElement\n    content?: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default Vue.extend<Vue & Toggleable & Stackable & options>().extend({\n  name: 'overlayable',\n\n  props: {\n    hideOverlay: Boolean,\n    overlayColor: String,\n    overlayOpacity: [Number, String],\n  },\n\n  data () {\n    return {\n      animationFrame: 0,\n      overlay: null as InstanceType<typeof VOverlay> | null,\n    }\n  },\n\n  watch: {\n    hideOverlay (value) {\n      if (!this.isActive) return\n\n      if (value) this.removeOverlay()\n      else this.genOverlay()\n    },\n  },\n\n  beforeDestroy () {\n    this.removeOverlay()\n  },\n\n  methods: {\n    createOverlay () {\n      const overlay = new VOverlay({\n        propsData: {\n          absolute: this.absolute,\n          value: false,\n          color: this.overlayColor,\n          opacity: this.overlayOpacity,\n        },\n      })\n\n      overlay.$mount()\n\n      const parent = this.absolute\n        ? this.$el.parentNode\n        : document.querySelector('[data-app]')\n\n      parent && parent.insertBefore(overlay.$el, parent.firstChild)\n\n      this.overlay = overlay\n    },\n    genOverlay () {\n      this.hideScroll()\n\n      if (this.hideOverlay) return\n\n      if (!this.overlay) this.createOverlay()\n\n      this.animationFrame = requestAnimationFrame(() => {\n        if (!this.overlay) return\n\n        if (this.activeZIndex !== undefined) {\n          this.overlay.zIndex = String(this.activeZIndex - 1)\n        } else if (this.$el) {\n          this.overlay.zIndex = getZIndex(this.$el)\n        }\n\n        this.overlay.value = true\n      })\n\n      return true\n    },\n    /** removeOverlay(false) will not restore the scollbar afterwards */\n    removeOverlay (showScroll = true) {\n      if (this.overlay) {\n        addOnceEventListener(this.overlay.$el, 'transitionend', () => {\n          if (\n            !this.overlay ||\n            !this.overlay.$el ||\n            !this.overlay.$el.parentNode ||\n            this.overlay.value\n          ) return\n\n          this.overlay.$el.parentNode.removeChild(this.overlay.$el)\n          this.overlay.$destroy()\n          this.overlay = null\n        })\n\n        // Cancel animation frame in case\n        // overlay is removed before it\n        // has finished its animation\n        cancelAnimationFrame(this.animationFrame)\n\n        this.overlay.value = false\n      }\n\n      showScroll && this.showScroll()\n    },\n    scrollListener (e: WheelEvent & KeyboardEvent) {\n      if (e.type === 'keydown') {\n        if (\n          ['INPUT', 'TEXTAREA', 'SELECT'].includes((e.target as Element).tagName) ||\n          // https://github.com/vuetifyjs/vuetify/issues/4715\n          (e.target as HTMLElement).isContentEditable\n        ) return\n\n        const up = [keyCodes.up, keyCodes.pageup]\n        const down = [keyCodes.down, keyCodes.pagedown]\n\n        if (up.includes(e.keyCode)) {\n          (e as any).deltaY = -1\n        } else if (down.includes(e.keyCode)) {\n          (e as any).deltaY = 1\n        } else {\n          return\n        }\n      }\n\n      if (e.target === this.overlay ||\n        (e.type !== 'keydown' && e.target === document.body) ||\n        this.checkPath(e)) e.preventDefault()\n    },\n    hasScrollbar (el?: Element) {\n      if (!el || el.nodeType !== Node.ELEMENT_NODE) return false\n\n      const style = window.getComputedStyle(el)\n      return ['auto', 'scroll'].includes(style.overflowY!) && el.scrollHeight > el.clientHeight\n    },\n    shouldScroll (el: Element, delta: number) {\n      if (el.scrollTop === 0 && delta < 0) return true\n      return el.scrollTop + el.clientHeight === el.scrollHeight && delta > 0\n    },\n    isInside (el: Element, parent: Element): boolean {\n      if (el === parent) {\n        return true\n      } else if (el === null || el === document.body) {\n        return false\n      } else {\n        return this.isInside(el.parentNode as Element, parent)\n      }\n    },\n    checkPath (e: WheelEvent) {\n      const path = e.path || this.composedPath(e)\n      const delta = e.deltaY\n\n      if (e.type === 'keydown' && path[0] === document.body) {\n        const dialog = this.$refs.dialog\n        // getSelection returns null in firefox in some edge cases, can be ignored\n        const selected = window.getSelection()!.anchorNode as Element\n        if (dialog && this.hasScrollbar(dialog) && this.isInside(selected, dialog)) {\n          return this.shouldScroll(dialog, delta)\n        }\n        return true\n      }\n\n      for (let index = 0; index < path.length; index++) {\n        const el = path[index]\n\n        if (el === document) return true\n        if (el === document.documentElement) return true\n        if (el === this.$refs.content) return true\n\n        if (this.hasScrollbar(el as Element)) return this.shouldScroll(el as Element, delta)\n      }\n\n      return true\n    },\n    /**\n     * Polyfill for Event.prototype.composedPath\n     */\n    composedPath (e: WheelEvent): EventTarget[] {\n      if (e.composedPath) return e.composedPath()\n\n      const path = []\n      let el = e.target as Element\n\n      while (el) {\n        path.push(el)\n\n        if (el.tagName === 'HTML') {\n          path.push(document)\n          path.push(window)\n\n          return path\n        }\n\n        el = el.parentElement!\n      }\n      return path\n    },\n    hideScroll () {\n      if (this.$vuetify.breakpoint.smAndDown) {\n        document.documentElement!.classList.add('overflow-y-hidden')\n      } else {\n        addPassiveEventListener(window, 'wheel', this.scrollListener as EventHandlerNonNull, { passive: false })\n        window.addEventListener('keydown', this.scrollListener as EventHandlerNonNull)\n      }\n    },\n    showScroll () {\n      document.documentElement!.classList.remove('overflow-y-hidden')\n      window.removeEventListener('wheel', this.scrollListener as EventHandlerNonNull)\n      window.removeEventListener('keydown', this.scrollListener as EventHandlerNonNull)\n    },\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'returnable',\n\n  props: {\n    returnValue: null as any,\n  },\n\n  data: () => ({\n    isActive: false,\n    originalValue: null as any,\n  }),\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.originalValue = this.returnValue\n      } else {\n        this.$emit('update:return-value', this.originalValue)\n      }\n    },\n  },\n\n  methods: {\n    save (value: any) {\n      this.originalValue = value\n      setTimeout(() => {\n        this.isActive = false\n      })\n    },\n  },\n})\n","import Vue from 'vue'\n\nimport { getZIndex } from '../../util/helpers'\n\ninterface options extends Vue {\n  $refs: {\n    content: Element\n  }\n}\n\n/* @vue/component */\nexport default Vue.extend<options>().extend({\n  name: 'stackable',\n\n  data () {\n    return {\n      stackElement: null as Element | null,\n      stackExclude: null as Element[] | null,\n      stackMinZIndex: 0,\n      isActive: false,\n    }\n  },\n  computed: {\n    activeZIndex (): number {\n      if (typeof window === 'undefined') return 0\n\n      const content = this.stackElement || this.$refs.content\n      // Return current zindex if not active\n\n      const index = !this.isActive\n        ? getZIndex(content)\n        : this.getMaxZIndex(this.stackExclude || [content]) + 2\n\n      if (index == null) return index\n\n      // Return max current z-index (excluding self) + 2\n      // (2 to leave room for an overlay below, if needed)\n      return parseInt(index)\n    },\n  },\n  methods: {\n    getMaxZIndex (exclude: Element[] = []) {\n      const base = this.$el\n      // Start with lowest allowed z-index or z-index of\n      // base component's element, whichever is greater\n      const zis = [this.stackMinZIndex, getZIndex(base)]\n      // Convert the NodeList to an array to\n      // prevent an Edge bug with Symbol.iterator\n      // https://github.com/vuetifyjs/vuetify/issues/2146\n      const activeElements = [\n        ...document.getElementsByClassName('v-menu__content--active'),\n        ...document.getElementsByClassName('v-dialog__content--active'),\n      ]\n\n      // Get z-index for all active dialogs\n      for (let index = 0; index < activeElements.length; index++) {\n        if (!exclude.includes(activeElements[index])) {\n          zis.push(getZIndex(activeElements[index]))\n        }\n      }\n\n      return Math.max(...zis)\n    },\n  },\n})\n","import { VNodeDirective } from 'vue/types/vnode'\n\ninterface ClickOutsideBindingArgs {\n  handler: (e: Event) => void\n  closeConditional?: (e: Event) => boolean\n  include?: () => HTMLElement[]\n}\n\ninterface ClickOutsideDirective extends VNodeDirective {\n  value?: ((e: Event) => void) | ClickOutsideBindingArgs\n}\n\nfunction defaultConditional () {\n  return true\n}\n\nfunction directive (e: PointerEvent, el: HTMLElement, binding: ClickOutsideDirective): void {\n  const handler = typeof binding.value === 'function' ? binding.value : binding.value!.handler\n\n  const isActive = (typeof binding.value === 'object' && binding.value.closeConditional) || defaultConditional\n\n  // The include element callbacks below can be expensive\n  // so we should avoid calling them when we're not active.\n  // Explicitly check for false to allow fallback compatibility\n  // with non-toggleable components\n  if (!e || isActive(e) === false) return\n\n  // If click was triggered programmaticaly (domEl.click()) then\n  // it shouldn't be treated as click-outside\n  // Chrome/Firefox support isTrusted property\n  // IE/Edge support pointerType property (empty if not triggered\n  // by pointing device)\n  if (('isTrusted' in e && !e.isTrusted) ||\n    ('pointerType' in e && !e.pointerType)\n  ) return\n\n  // Check if additional elements were passed to be included in check\n  // (click must be outside all included elements, if any)\n  const elements = ((typeof binding.value === 'object' && binding.value.include) || (() => []))()\n  // Add the root element for the component this directive was defined on\n  elements.push(el)\n\n  // Check if it's a click outside our elements, and then if our callback returns true.\n  // Non-toggleable components should take action in their callback and return falsy.\n  // Toggleable can return true if it wants to deactivate.\n  // Note that, because we're in the capture phase, this callback will occur before\n  // the bubbling click event on any outside elements.\n  !elements.some(el => el.contains(e.target as Node)) && setTimeout(() => {\n    isActive(e) && handler && handler(e)\n  }, 0)\n}\n\nexport const ClickOutside = {\n  // [data-app] may not be found\n  // if using bind, inserted makes\n  // sure that the root element is\n  // available, iOS does not support\n  // clicks on body\n  inserted (el: HTMLElement, binding: ClickOutsideDirective) {\n    const onClick = (e: Event) => directive(e as PointerEvent, el, binding)\n    // iOS does not recognize click events on document\n    // or body, this is the entire purpose of the v-app\n    // component and [data-app], stop removing this\n    const app = document.querySelector('[data-app]') ||\n      document.body // This is only for unit tests\n    app.addEventListener('click', onClick, true)\n    el._clickOutside = onClick\n  },\n\n  unbind (el: HTMLElement) {\n    if (!el._clickOutside) return\n\n    const app = document.querySelector('[data-app]') ||\n      document.body // This is only for unit tests\n    app && app.removeEventListener('click', el._clickOutside, true)\n    delete el._clickOutside\n  },\n}\n\nexport default ClickOutside\n","// Styles\nimport './VDialog.sass'\n\n// Components\nimport { VThemeProvider } from '../VThemeProvider'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Overlayable from '../../mixins/overlayable'\nimport Returnable from '../../mixins/returnable'\nimport Stackable from '../../mixins/stackable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Helpers\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\nimport {\n  convertToUnit,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  Activatable,\n  Dependent,\n  Detachable,\n  Overlayable,\n  Returnable,\n  Stackable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-dialog',\n\n  directives: { ClickOutside },\n\n  props: {\n    dark: Boolean,\n    disabled: Boolean,\n    fullscreen: Boolean,\n    light: Boolean,\n    maxWidth: {\n      type: [String, Number],\n      default: 'none',\n    },\n    noClickAnimation: Boolean,\n    origin: {\n      type: String,\n      default: 'center center',\n    },\n    persistent: Boolean,\n    retainFocus: {\n      type: Boolean,\n      default: true,\n    },\n    scrollable: Boolean,\n    transition: {\n      type: [String, Boolean],\n      default: 'dialog-transition',\n    },\n    width: {\n      type: [String, Number],\n      default: 'auto',\n    },\n  },\n\n  data () {\n    return {\n      activatedBy: null as EventTarget | null,\n      animate: false,\n      animateTimeout: -1,\n      isActive: !!this.value,\n      stackMinZIndex: 200,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        [(`v-dialog ${this.contentClass}`).trim()]: true,\n        'v-dialog--active': this.isActive,\n        'v-dialog--persistent': this.persistent,\n        'v-dialog--fullscreen': this.fullscreen,\n        'v-dialog--scrollable': this.scrollable,\n        'v-dialog--animated': this.animate,\n      }\n    },\n    contentClasses (): object {\n      return {\n        'v-dialog__content': true,\n        'v-dialog__content--active': this.isActive,\n      }\n    },\n    hasActivator (): boolean {\n      return Boolean(\n        !!this.$slots.activator ||\n        !!this.$scopedSlots.activator\n      )\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.show()\n        this.hideScroll()\n      } else {\n        this.removeOverlay()\n        this.unbind()\n      }\n    },\n    fullscreen (val) {\n      if (!this.isActive) return\n\n      if (val) {\n        this.hideScroll()\n        this.removeOverlay(false)\n      } else {\n        this.showScroll()\n        this.genOverlay()\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      this.isBooted = this.isActive\n      this.isActive && this.show()\n    })\n  },\n\n  beforeDestroy () {\n    if (typeof window !== 'undefined') this.unbind()\n  },\n\n  methods: {\n    animateClick () {\n      this.animate = false\n      // Needed for when clicking very fast\n      // outside of the dialog\n      this.$nextTick(() => {\n        this.animate = true\n        window.clearTimeout(this.animateTimeout)\n        this.animateTimeout = window.setTimeout(() => (this.animate = false), 150)\n      })\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n      // Ignore the click if the dialog is closed or destroyed,\n      // if it was on an element inside the content,\n      // if it was dragged onto the overlay (#6969),\n      // or if this isn't the topmost dialog (#9907)\n      return !(\n        this._isDestroyed ||\n        !this.isActive ||\n        this.$refs.content.contains(target) ||\n        (this.overlay && target && !this.overlay.$el.contains(target))\n      ) && this.activeZIndex >= this.getMaxZIndex()\n    },\n    hideScroll () {\n      if (this.fullscreen) {\n        document.documentElement.classList.add('overflow-y-hidden')\n      } else {\n        Overlayable.options.methods.hideScroll.call(this)\n      }\n    },\n    show () {\n      !this.fullscreen && !this.hideOverlay && this.genOverlay()\n      this.$nextTick(() => {\n        this.$refs.content.focus()\n        this.bind()\n      })\n    },\n    bind () {\n      window.addEventListener('focusin', this.onFocusin)\n    },\n    unbind () {\n      window.removeEventListener('focusin', this.onFocusin)\n    },\n    onClickOutside (e: Event) {\n      this.$emit('click:outside', e)\n\n      if (this.persistent) {\n        this.noClickAnimation || this.animateClick()\n      } else {\n        this.isActive = false\n      }\n    },\n    onKeydown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc && !this.getOpenDependents().length) {\n        if (!this.persistent) {\n          this.isActive = false\n          const activator = this.getActivator()\n          this.$nextTick(() => activator && (activator as HTMLElement).focus())\n        } else if (!this.noClickAnimation) {\n          this.animateClick()\n        }\n      }\n      this.$emit('keydown', e)\n    },\n    // On focus change, wrap focus to stay inside the dialog\n    // https://github.com/vuetifyjs/vuetify/issues/6892\n    onFocusin (e: Event) {\n      if (!e || !this.retainFocus) return\n\n      const target = e.target as HTMLElement\n\n      if (\n        !!target &&\n        // It isn't the document or the dialog body\n        ![document, this.$refs.content].includes(target) &&\n        // It isn't inside the dialog body\n        !this.$refs.content.contains(target) &&\n        // We're the topmost dialog\n        this.activeZIndex >= this.getMaxZIndex() &&\n        // It isn't inside a dependent element (like a menu)\n        !this.getOpenDependentElements().some(el => el.contains(target))\n        // So we must have focused something outside the dialog and its children\n      ) {\n        // Find and focus the first available element inside the dialog\n        const focusable = this.$refs.content.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])')\n        const el = [...focusable].find(el => !el.hasAttribute('disabled')) as HTMLElement | undefined\n        el && el.focus()\n      }\n    },\n    genContent () {\n      return this.showLazyContent(() => [\n        this.$createElement(VThemeProvider, {\n          props: {\n            root: true,\n            light: this.light,\n            dark: this.dark,\n          },\n        }, [\n          this.$createElement('div', {\n            class: this.contentClasses,\n            attrs: {\n              role: 'document',\n              tabindex: this.isActive ? 0 : undefined,\n              ...this.getScopeIdAttrs(),\n            },\n            on: { keydown: this.onKeydown },\n            style: { zIndex: this.activeZIndex },\n            ref: 'content',\n          }, [this.genTransition()]),\n        ]),\n      ])\n    },\n    genTransition () {\n      const content = this.genInnerContent()\n\n      if (!this.transition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n          origin: this.origin,\n          appear: true,\n        },\n      }, [content])\n    },\n    genInnerContent () {\n      const data: VNodeData = {\n        class: this.classes,\n        ref: 'dialog',\n        directives: [\n          {\n            name: 'click-outside',\n            value: {\n              handler: this.onClickOutside,\n              closeConditional: this.closeConditional,\n              include: this.getOpenDependentElements,\n            },\n          },\n          { name: 'show', value: this.isActive },\n        ],\n        style: {\n          transformOrigin: this.origin,\n        },\n      }\n\n      if (!this.fullscreen) {\n        data.style = {\n          ...data.style as object,\n          maxWidth: this.maxWidth === 'none' ? undefined : convertToUnit(this.maxWidth),\n          width: this.width === 'auto' ? undefined : convertToUnit(this.width),\n        }\n      }\n\n      return this.$createElement('div', data, this.getContentSlot())\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-dialog__container',\n      class: {\n        'v-dialog__container--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      attrs: { role: 'dialog' },\n    }, [\n      this.genActivator(),\n      this.genContent(),\n    ])\n  },\n})\n","import Vue from 'vue'\n\n/**\n * Delayable\n *\n * @mixin\n *\n * Changes the open or close delay time for elements\n */\nexport default Vue.extend<Vue & { isActive?: boolean }>().extend({\n  name: 'delayable',\n\n  props: {\n    openDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    closeDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data: () => ({\n    openTimeout: undefined as number | undefined,\n    closeTimeout: undefined as number | undefined,\n  }),\n\n  methods: {\n    /**\n     * Clear any pending delay timers from executing\n     */\n    clearDelay (): void {\n      clearTimeout(this.openTimeout)\n      clearTimeout(this.closeTimeout)\n    },\n    /**\n     * Runs callback after a specified delay\n     */\n    runDelay (type: 'open' | 'close', cb?: () => void): void {\n      this.clearDelay()\n\n      const delay = parseInt((this as any)[`${type}Delay`], 10)\n\n      ;(this as any)[`${type}Timeout`] = setTimeout(cb || (() => {\n        this.isActive = { open: true, close: false }[type]\n      }), delay)\n    },\n  },\n})\n"],"sourceRoot":""}